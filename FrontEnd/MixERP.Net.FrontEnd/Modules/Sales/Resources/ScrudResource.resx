<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="account_id" xml:space="preserve">
    <value>Account Id</value>
  </data>
  <data name="address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="amount_from" xml:space="preserve">
    <value>Amount From</value>
  </data>
  <data name="amount_to" xml:space="preserve">
    <value>Amount To</value>
  </data>
  <data name="bonus_rate" xml:space="preserve">
    <value>Bonus Rate</value>
  </data>
  <data name="bonus_slab_code" xml:space="preserve">
    <value>Bonus Slab Code</value>
  </data>
  <data name="bonus_slab_detail_id" xml:space="preserve">
    <value>Bonus Slab Detail Id</value>
  </data>
  <data name="bonus_slab_id" xml:space="preserve">
    <value>Bonus Slab Id</value>
  </data>
  <data name="bonus_slab_name" xml:space="preserve">
    <value>Bonus Slab Name</value>
  </data>
  <data name="checking_frequency_id" xml:space="preserve">
    <value>Checking Frequency Id</value>
  </data>
  <data name="commision_rate" xml:space="preserve">
    <value>Commission Rate</value>
  </data>
  <data name="contact_number" xml:space="preserve">
    <value>Contact Number</value>
  </data>
  <data name="discount" xml:space="preserve">
    <value>Discount</value>
  </data>
  <data name="frequency_name" xml:space="preserve">
    <value>Frequency Name</value>
  </data>
  <data name="id" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="item_code" xml:space="preserve">
    <value>Item Code</value>
  </data>
  <data name="item_id" xml:space="preserve">
    <value>Item Id</value>
  </data>
  <data name="item_name" xml:space="preserve">
    <value>Item Name</value>
  </data>
  <data name="price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="salesperson_bonus_setup_id" xml:space="preserve">
    <value>Salesperson Bonus Setup Id</value>
  </data>
  <data name="salesperson_code" xml:space="preserve">
    <value>Salesperson Code</value>
  </data>
  <data name="salesperson_id" xml:space="preserve">
    <value>Salesperson Id</value>
  </data>
  <data name="salesperson_name" xml:space="preserve">
    <value>Salesperson Name</value>
  </data>
  <data name="sales_team_code" xml:space="preserve">
    <value>Sales Team Code</value>
  </data>
  <data name="sales_team_id" xml:space="preserve">
    <value>Sales Team Id</value>
  </data>
  <data name="sales_team_name" xml:space="preserve">
    <value>Sales Team Name</value>
  </data>
  <data name="sub_total" xml:space="preserve">
    <value>Sub Total</value>
  </data>
  <data name="tax" xml:space="preserve">
    <value>Tax</value>
  </data>
  <data name="total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="total_sales" xml:space="preserve">
    <value>Total Sales</value>
  </data>
  <data name="unit_name" xml:space="preserve">
    <value>Unit Name</value>
  </data>
  <data name="account_name" xml:space="preserve">
    <value>Account Name</value>
  </data>
  <data name="audit_ts" xml:space="preserve">
    <value>Audit Timestamp</value>
  </data>
  <data name="audit_user_id" xml:space="preserve">
    <value>Audit User Id</value>
  </data>
  <data name="commission_rate" xml:space="preserve">
    <value>Commission Rate</value>
  </data>
  <data name="slab_name" xml:space="preserve">
    <value>Slab Name</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="frequency_code" xml:space="preserve">
    <value>Frequency Code</value>
  </data>
  <data name="frequency_id" xml:space="preserve">
    <value>Frequency Id</value>
  </data>
  <data name="account_number" xml:space="preserve">
    <value>Account Number</value>
  </data>
  <data name="account_master_code" xml:space="preserve">
    <value>Account Master Code</value>
  </data>
  <data name="account_master_id" xml:space="preserve">
    <value>Account Master Id</value>
  </data>
  <data name="account_master_name" xml:space="preserve">
    <value>Account Master Name</value>
  </data>
  <data name="bonus_slab_details_amounts_chk" xml:space="preserve">
    <value>The field "AmountTo" must be greater than "AmountFrom".</value>
  </data>
  <data name="description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="effective_from" xml:space="preserve">
    <value>Effective From</value>
  </data>
  <data name="ends_on" xml:space="preserve">
    <value>Ends On</value>
  </data>
  <data name="parent_account_number" xml:space="preserve">
    <value>Parent Account Number</value>
  </data>
  <data name="parent_account_id" xml:space="preserve">
    <value>Parent Account Id</value>
  </data>
  <data name="parent_account_name" xml:space="preserve">
    <value>Parent Account Name</value>
  </data>
  <data name="sys_type" xml:space="preserve">
    <value>Sys Type</value>
  </data>
  <data name="due_days" xml:space="preserve">
    <value>Due Days</value>
  </data>
  <data name="due_frequency_id" xml:space="preserve">
    <value>Due Frequency Id</value>
  </data>
  <data name="due_on_date" xml:space="preserve">
    <value>Due on Date</value>
  </data>
  <data name="grace_peiod" xml:space="preserve">
    <value>Grace Period</value>
  </data>
  <data name="is_flat_amount" xml:space="preserve">
    <value>Is Flat Amount</value>
  </data>
  <data name="late_fee_code" xml:space="preserve">
    <value>Late Fee Code</value>
  </data>
  <data name="late_fee_id" xml:space="preserve">
    <value>Late Fee Id</value>
  </data>
  <data name="late_fee_name" xml:space="preserve">
    <value>Late Fee Name</value>
  </data>
  <data name="late_fee_posting_frequency_id" xml:space="preserve">
    <value>Late Fee Posting Frequency Id</value>
  </data>
  <data name="payment_term_code" xml:space="preserve">
    <value>Payment Term Code</value>
  </data>
  <data name="payment_term_id" xml:space="preserve">
    <value>Payment Term Id</value>
  </data>
  <data name="payment_term_name" xml:space="preserve">
    <value>Payment Term Name</value>
  </data>
  <data name="rate" xml:space="preserve">
    <value>Rate</value>
  </data>
  <data name="recurring_invoice_code" xml:space="preserve">
    <value>Recurring Invoice Code</value>
  </data>
  <data name="recurring_invoice_id" xml:space="preserve">
    <value>Recurring Invoice Id</value>
  </data>
  <data name="recurring_invoice_name" xml:space="preserve">
    <value>Recurring Invoice Name</value>
  </data>
  <data name="recurring_invoice_setup_id" xml:space="preserve">
    <value>Recurring Invoice Setup Id</value>
  </data>
  <data name="starts_from" xml:space="preserve">
    <value>Starts From</value>
  </data>
  <data name="compound_item_id" xml:space="preserve">
    <value>Compound Item Id</value>
  </data>
  <data name="party_id" xml:space="preserve">
    <value>Party Id</value>
  </data>
  <data name="recurring_frequency_id" xml:space="preserve">
    <value>Recurring Frequency Id</value>
  </data>
  <data name="recurring_amount" xml:space="preserve">
    <value>Recurring Amount</value>
  </data>
  <data name="auto_trigger_on_sales" xml:space="preserve">
    <value>Automatically Trigger on Sales</value>
  </data>
  <data name="recurring_invoices_item_id_auto_trigger_on_sales_uix" xml:space="preserve">
    <value>You cannot have more than one auto trigger on sales for this item.</value>
  </data>
  <data name="due_frequency" xml:space="preserve">
    <value>Due Frequency</value>
  </data>
  <data name="late_fee_posting_frequency" xml:space="preserve">
    <value>Late Fee Posting Frequency</value>
  </data>
  <data name="compound_item" xml:space="preserve">
    <value>Compound Item</value>
  </data>
  <data name="item" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="party" xml:space="preserve">
    <value>Party</value>
  </data>
  <data name="payment_term" xml:space="preserve">
    <value>Payment Term</value>
  </data>
  <data name="recurring_frequency" xml:space="preserve">
    <value>Recurring Frequency</value>
  </data>
  <data name="recurring_invoice" xml:space="preserve">
    <value>Recurring Invoice</value>
  </data>
  <data name="late_fee" xml:space="preserve">
    <value>Late Fee</value>
  </data>
</root>