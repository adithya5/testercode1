<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SelectStore" xml:space="preserve">
    <value>セレクトショップ</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>ユーザー</value>
  </data>
  <data name="TransactionDate" xml:space="preserve">
    <value>取引日</value>
  </data>
  <data name="StoreTypes" xml:space="preserve">
    <value>ストア型</value>
  </data>
  <data name="AccountStatement" xml:space="preserve">
    <value>取引明細書</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>から</value>
  </data>
  <data name="ReorderUnitName" xml:space="preserve">
    <value>再注文単位名</value>
  </data>
  <data name="Shippers" xml:space="preserve">
    <value>荷主</value>
  </data>
  <data name="StockTransferJournal" xml:space="preserve">
    <value>株式移転ジャーナル</value>
  </data>
  <data name="TransactionStatus" xml:space="preserve">
    <value>トランザクション·ステータス</value>
  </data>
  <data name="Definition" xml:space="preserve">
    <value>定義</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="ItemGroup" xml:space="preserve">
    <value>アイテムのグループ</value>
  </data>
  <data name="UnitName" xml:space="preserve">
    <value>装置名</value>
  </data>
  <data name="Brands" xml:space="preserve">
    <value>ブランド</value>
  </data>
  <data name="ShippingAddressMaintenance" xml:space="preserve">
    <value>配送先住所のメンテナンス</value>
  </data>
  <data name="TransferDetails" xml:space="preserve">
    <value>転送の詳細</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>タイプ</value>
  </data>
  <data name="ListItems" xml:space="preserve">
    <value>リストアイテム</value>
  </data>
  <data name="ItemOverview" xml:space="preserve">
    <value>アイテムの概要</value>
  </data>
  <data name="Prepare" xml:space="preserve">
    <value>準備する</value>
  </data>
  <data name="Store" xml:space="preserve">
    <value>店舗</value>
  </data>
  <data name="VerificationReason" xml:space="preserve">
    <value>検証理由</value>
  </data>
  <data name="ItemGroups" xml:space="preserve">
    <value>アイテムのグループ</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>メール</value>
  </data>
  <data name="ViewThisTransfer" xml:space="preserve">
    <value>この転送を見る</value>
  </data>
  <data name="OfficeCode" xml:space="preserve">
    <value>オフィスコード</value>
  </data>
  <data name="ItemId" xml:space="preserve">
    <value>項目識別子</value>
  </data>
  <data name="Balance" xml:space="preserve">
    <value>バランス</value>
  </data>
  <data name="BaseUnitName" xml:space="preserve">
    <value>ベースユニット名</value>
  </data>
  <data name="ViewThisAdjustment" xml:space="preserve">
    <value>この調整を見る</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>選択する</value>
  </data>
  <data name="UnitsOfMeasure" xml:space="preserve">
    <value>測定の単位</value>
  </data>
  <data name="Tel" xml:space="preserve">
    <value>テレフォン</value>
  </data>
  <data name="ReferenceNumber" xml:space="preserve">
    <value>リファレンス＃</value>
  </data>
  <data name="ItemTypes" xml:space="preserve">
    <value>アイテム·タイプ</value>
  </data>
  <data name="Show" xml:space="preserve">
    <value>ショー</value>
  </data>
  <data name="Actual" xml:space="preserve">
    <value>実際</value>
  </data>
  <data name="Debit" xml:space="preserve">
    <value>借方</value>
  </data>
  <data name="LeadTime" xml:space="preserve">
    <value>リードタイム</value>
  </data>
  <data name="PartyTypes" xml:space="preserve">
    <value>パーティーの種類</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>へ</value>
  </data>
  <data name="Parties" xml:space="preserve">
    <value>パーティー</value>
  </data>
  <data name="Url" xml:space="preserve">
    <value>ユニフォームリソースロケータ</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>印刷</value>
  </data>
  <data name="TranCode" xml:space="preserve">
    <value>トランザクションコード</value>
  </data>
  <data name="Stores" xml:space="preserve">
    <value>ストア</value>
  </data>
  <data name="Difference" xml:space="preserve">
    <value>違い</value>
  </data>
  <data name="Flag" xml:space="preserve">
    <value>フラグ</value>
  </data>
  <data name="PreferredSupplier" xml:space="preserve">
    <value>優先サプライヤー</value>
  </data>
  <data name="TransactionStatement" xml:space="preserve">
    <value>トランザクションステートメント</value>
  </data>
  <data name="ItemCostPrices" xml:space="preserve">
    <value>アイテムのコスト価格</value>
  </data>
  <data name="CompoundItems" xml:space="preserve">
    <value>複合アイテム</value>
  </data>
  <data name="StockAdjustment" xml:space="preserve">
    <value>ストック調整</value>
  </data>
  <data name="VerifiedBy" xml:space="preserve">
    <value>によって検証</value>
  </data>
  <data name="ItemCode" xml:space="preserve">
    <value>商品コード</value>
  </data>
  <data name="RunningTotal" xml:space="preserve">
    <value>合計の実行</value>
  </data>
  <data name="ValueDate" xml:space="preserve">
    <value>実行日</value>
  </data>
  <data name="Days" xml:space="preserve">
    <value>日数</value>
  </data>
  <data name="Book" xml:space="preserve">
    <value>ブック</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>アイテム</value>
  </data>
  <data name="Fax" xml:space="preserve">
    <value>ファックス</value>
  </data>
  <data name="EnteredBy" xml:space="preserve">
    <value>によって入力された</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>電話</value>
  </data>
  <data name="ItemName" xml:space="preserve">
    <value>項目名</value>
  </data>
  <data name="Brand" xml:space="preserve">
    <value>ブランド</value>
  </data>
  <data name="InventoryAdvice" xml:space="preserve">
    <value>在庫のアドバイス</value>
  </data>
  <data name="ItemSellingPrices" xml:space="preserve">
    <value>アイテムの販売価格</value>
  </data>
  <data name="PreparedOn" xml:space="preserve">
    <value>上に用意</value>
  </data>
  <data name="UnitId" xml:space="preserve">
    <value>ユニット識別子</value>
  </data>
  <data name="Office" xml:space="preserve">
    <value>オフィス</value>
  </data>
  <data name="StatementReference" xml:space="preserve">
    <value>ステートメントリファレンス</value>
  </data>
  <data name="Credit" xml:space="preserve">
    <value>クレジット</value>
  </data>
  <data name="ItemType" xml:space="preserve">
    <value>項目種別</value>
  </data>
  <data name="CompoundUnitsOfMeasure" xml:space="preserve">
    <value>メジャーの化合物単位</value>
  </data>
  <data name="CompoundItemDetails" xml:space="preserve">
    <value>複合商品詳細</value>
  </data>
</root>