<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnalyzeDatabse" xml:space="preserve">
    <value>Analyze Databse</value>
  </data>
  <data name="AutoVerificationPolicy" xml:space="preserve">
    <value>Autoverification Policy</value>
  </data>
  <data name="CashRepositories" xml:space="preserve">
    <value>Cash Repositories</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="Counters" xml:space="preserve">
    <value>Counters</value>
  </data>
  <data name="DatabaseStatistics" xml:space="preserve">
    <value>Database Statistics</value>
  </data>
  <data name="Departments" xml:space="preserve">
    <value>Departments</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Execute" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="Fax" xml:space="preserve">
    <value>Fax</value>
  </data>
  <data name="FiscalYear" xml:space="preserve">
    <value>Fiscal Year</value>
  </data>
  <data name="Flags" xml:space="preserve">
    <value>Flags</value>
  </data>
  <data name="Frequencies" xml:space="preserve">
    <value>Frequencies</value>
  </data>
  <data name="GoToTop" xml:space="preserve">
    <value>GoToTop</value>
  </data>
  <data name="Load" xml:space="preserve">
    <value>Load</value>
  </data>
  <data name="OfficeSetup" xml:space="preserve">
    <value>Office Setup</value>
  </data>
  <data name="PreparedOn" xml:space="preserve">
    <value>Prepared On</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="SalesTaxDetails" xml:space="preserve">
    <value>Sales Tax Details</value>
  </data>
  <data name="SalesTaxes" xml:space="preserve">
    <value>Sales Taxes</value>
  </data>
  <data name="SalesTaxExemptDetails" xml:space="preserve">
    <value>Sales Tax Exempt Details</value>
  </data>
  <data name="SalesTaxExempts" xml:space="preserve">
    <value>Sales Tax Exempts</value>
  </data>
  <data name="SalesTaxTypes" xml:space="preserve">
    <value>Sales Tax Types</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="StateSalesTaxes" xml:space="preserve">
    <value>State Sales Taxes</value>
  </data>
  <data name="TaxAuthorities" xml:space="preserve">
    <value>Tax Authorities</value>
  </data>
  <data name="TaxExemptTypes" xml:space="preserve">
    <value>Tax Exempt Types</value>
  </data>
  <data name="TaxMaster" xml:space="preserve">
    <value>Tax Master</value>
  </data>
  <data name="Tel" xml:space="preserve">
    <value>Tel</value>
  </data>
  <data name="Url" xml:space="preserve">
    <value>Url</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="VacuumDatabase" xml:space="preserve">
    <value>Vacuum Database</value>
  </data>
  <data name="VacuumFullDatabase" xml:space="preserve">
    <value>Vacuum Database (Full)</value>
  </data>
  <data name="VoucherVerificationPolicy" xml:space="preserve">
    <value>Voucher Verification Policy</value>
  </data>
  <data name="CountySalesTaxes" xml:space="preserve">
    <value>County Sales Taxes</value>
  </data>
  <data name="Counties" xml:space="preserve">
    <value>Counties</value>
  </data>
  <data name="Countries" xml:space="preserve">
    <value>Countries</value>
  </data>
  <data name="Entities" xml:space="preserve">
    <value>Entities</value>
  </data>
  <data name="Industries" xml:space="preserve">
    <value>Industries</value>
  </data>
  <data name="States" xml:space="preserve">
    <value>States</value>
  </data>
  <data name="BackupDatabase" xml:space="preserve">
    <value>Backup Database</value>
  </data>
  <data name="BackupNow" xml:space="preserve">
    <value>Backup Now</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="DatabaseBackups" xml:space="preserve">
    <value>Database Backups</value>
  </data>
  <data name="EnterBackupName" xml:space="preserve">
    <value>Enter Backup Name</value>
  </data>
  <data name="ViewBackups" xml:space="preserve">
    <value>View Backups</value>
  </data>
  <data name="BackupConsole" xml:space="preserve">
    <value>Backup Console</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="EnterNewPassword" xml:space="preserve">
    <value>Enter a New Password</value>
  </data>
  <data name="PasswordUpdated" xml:space="preserve">
    <value>Password was updated.</value>
  </data>
  <data name="SelectUser" xml:space="preserve">
    <value>Select User</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Access" xml:space="preserve">
    <value>Access</value>
  </data>
  <data name="MenuCode" xml:space="preserve">
    <value>Menu Code</value>
  </data>
  <data name="MenuId" xml:space="preserve">
    <value>Menu Id</value>
  </data>
  <data name="MenuText" xml:space="preserve">
    <value>Menu Text</value>
  </data>
  <data name="RowNumber" xml:space="preserve">
    <value>Row Number</value>
  </data>
  <data name="CheckAll" xml:space="preserve">
    <value>Check All</value>
  </data>
  <data name="MenuAccessPolicy" xml:space="preserve">
    <value>Menu Access Policy</value>
  </data>
  <data name="Show" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="UncheckAll" xml:space="preserve">
    <value>Uncheck All</value>
  </data>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="ItemCode" xml:space="preserve">
    <value>Item Code</value>
  </data>
  <data name="ItemName" xml:space="preserve">
    <value>Item Name</value>
  </data>
  <data name="OpeningInventory" xml:space="preserve">
    <value>Opening Inventory</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="StoreName" xml:space="preserve">
    <value>Store Name</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Unit" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
</root>