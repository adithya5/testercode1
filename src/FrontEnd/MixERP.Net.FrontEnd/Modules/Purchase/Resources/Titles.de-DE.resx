<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Price" xml:space="preserve">
    <value>Preis</value>
  </data>
  <data name="PurchaseOrder" xml:space="preserve">
    <value>Auftragsbestätigung</value>
  </data>
  <data name="PriceType" xml:space="preserve">
    <value>Preis Art</value>
  </data>
  <data name="PurchaseInvoice" xml:space="preserve">
    <value>Einkaufsrechnung</value>
  </data>
  <data name="PurchaseReturn" xml:space="preserve">
    <value>Kauf Rückkehr</value>
  </data>
  <data name="PurchaseType" xml:space="preserve">
    <value>Kaufen Haustyp</value>
  </data>
  <data name="UnitId" xml:space="preserve">
    <value>Einheiten- kennung</value>
  </data>
  <data name="QuantityOnHandAbbreviated" xml:space="preserve">
    <value>Menge (auf der Hand)</value>
  </data>
  <data name="EmailThisInvoice" xml:space="preserve">
    <value>Email This Rechnung</value>
  </data>
  <data name="ReferenceNumber" xml:space="preserve">
    <value>Referenz-Nr #</value>
  </data>
  <data name="ReorderLevel" xml:space="preserve">
    <value>Meldebestand</value>
  </data>
  <data name="SupplierName" xml:space="preserve">
    <value>Name des Anbieters</value>
  </data>
  <data name="ReorderQuantityAbbreviated" xml:space="preserve">
    <value>Nachbestellung Menge</value>
  </data>
  <data name="SelectSupplier" xml:space="preserve">
    <value>Wählen Sie Lieferant</value>
  </data>
  <data name="SelectUnit" xml:space="preserve">
    <value>Wählen Sie die Einheit</value>
  </data>
  <data name="StatementReference" xml:space="preserve">
    <value>Anweisungsreferenz</value>
  </data>
  <data name="EmailThisReturn" xml:space="preserve">
    <value>Mail zurückkehren</value>
  </data>
  <data name="EmailThisNote" xml:space="preserve">
    <value>Email Hinweis</value>
  </data>
  <data name="Tax" xml:space="preserve">
    <value>Steuer</value>
  </data>
  <data name="TaxRate" xml:space="preserve">
    <value>Steuersatz</value>
  </data>
  <data name="Tel" xml:space="preserve">
    <value>Telefon</value>
  </data>
  <data name="TranCode" xml:space="preserve">
    <value>Transaktionscode</value>
  </data>
  <data name="TranId" xml:space="preserve">
    <value>Transaction-Identifier</value>
  </data>
  <data name="TransactionDate" xml:space="preserve">
    <value>Transaktionsdatum</value>
  </data>
  <data name="Unit" xml:space="preserve">
    <value>Einheit</value>
  </data>
  <data name="TransactionStatus" xml:space="preserve">
    <value>Transaktionsstatus</value>
  </data>
  <data name="EmailThisOrder" xml:space="preserve">
    <value>Email Bestellung</value>
  </data>
  <data name="ValueDate" xml:space="preserve">
    <value>Wert Datum</value>
  </data>
  <data name="Url" xml:space="preserve">
    <value>Uniform Resource Locator</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>Benutzer</value>
  </data>
  <data name="ViewThisInvoice" xml:space="preserve">
    <value>Bekijk deze factuur</value>
  </data>
  <data name="VerificationReason" xml:space="preserve">
    <value>Überprüfung Begründung</value>
  </data>
  <data name="VerifiedBy" xml:space="preserve">
    <value>indem überprüft</value>
  </data>
  <data name="ViewThisNote" xml:space="preserve">
    <value>Bekijk deze Nota</value>
  </data>
  <data name="ViewThisOrder" xml:space="preserve">
    <value>Bekijk dit Bestel</value>
  </data>
  <data name="ViewThisReturn" xml:space="preserve">
    <value>Bekijk deze terugkeer</value>
  </data>
  <data name="Check" xml:space="preserve">
    <value>Kreuze An</value>
  </data>
  <data name="ExchangeRate" xml:space="preserve">
    <value>Wechselkurs</value>
  </data>
  <data name="InvoiceDetails" xml:space="preserve">
    <value>Rechnungsdetails</value>
  </data>
  <data name="DirectPurchase" xml:space="preserve">
    <value>Direktkauf</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-Mail</value>
  </data>
  <data name="ItemCode" xml:space="preserve">
    <value>Item Code</value>
  </data>
  <data name="CashRepository" xml:space="preserve">
    <value>Barzahlung Repository</value>
  </data>
  <data name="EnteredBy" xml:space="preserve">
    <value>eingetragen von</value>
  </data>
  <data name="CostCenter" xml:space="preserve">
    <value>Kostenstelle</value>
  </data>
  <data name="Fax" xml:space="preserve">
    <value>Fax</value>
  </data>
  <data name="DefaultReorderQuantityAbbreviated" xml:space="preserve">
    <value>Standard Reorder Menge</value>
  </data>
  <data name="GoodsReceiptNote" xml:space="preserve">
    <value>Wareneingang Hinweis</value>
  </data>
  <data name="ItemId" xml:space="preserve">
    <value>Artikel-Nummer</value>
  </data>
  <data name="ItemName" xml:space="preserve">
    <value>Artikelname</value>
  </data>
  <data name="ItemsBelowReorderLevel" xml:space="preserve">
    <value>Artikel Unten Meldebestand</value>
  </data>
  <data name="Office" xml:space="preserve">
    <value>Büro</value>
  </data>
  <data name="OfficeCode" xml:space="preserve">
    <value>Büro-Code</value>
  </data>
  <data name="PlaceReorderRequests" xml:space="preserve">
    <value>Zeigen Reorder Anfragen</value>
  </data>
  <data name="OtherDetails" xml:space="preserve">
    <value>Weitere Einzelheiten</value>
  </data>
  <data name="PreferredSupplier" xml:space="preserve">
    <value>Bevorzugter Lieferant</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Telefon</value>
  </data>
  <data name="PreferredSupplierIdAbbreviated" xml:space="preserve">
    <value>Bevorzugter Lieferant Kennung</value>
  </data>
  <data name="PreparedOn" xml:space="preserve">
    <value>vorbereitet auf</value>
  </data>
</root>