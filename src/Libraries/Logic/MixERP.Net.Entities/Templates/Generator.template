<#
if (string.IsNullOrEmpty(Namespace)) Namespace=ConnectionStringName;
if (string.IsNullOrEmpty(RepoName) && !string.IsNullOrEmpty(ConnectionStringName)) RepoName=ConnectionStringName + "DB";
if (string.IsNullOrEmpty(Namespace)) Namespace="PetaPoco";
if (string.IsNullOrEmpty(RepoName)) RepoName="PetaPocoDB";
#>
using MixERP.Net.Entities.Contracts;
using PetaPoco;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace <#=Namespace #>
{
<# if (GeneratePocos) { #>
<#
foreach(Table tbl in from t in tables where !t.Ignore select t)
{
#>

<# if(tbl.IsFunction) { #>
    [FunctionName("<#=tbl.Name#>")]
<# } else { #>
    [TableName("<#=tbl.Schema#>.<#=tbl.Name#>")]
<# }#>
<# if (tbl.PK!=null && tbl.PK.IsAutoIncrement) { #>
<# if (tbl.SequenceName==null) { #>
    [PrimaryKey("<#=tbl.PK.Name#>")]
<# } else { #>
    [PrimaryKey("<#=tbl.PK.Name#>", sequenceName="<#=tbl.SequenceName#>")]
<# } #>
<# } #>
<# if (tbl.PK!=null && !tbl.PK.IsAutoIncrement) { #>
    [PrimaryKey("<#=tbl.PK.Name#>", autoIncrement=false)]
<# } #>
    [ExplicitColumns]
    public class <#=tbl.ClassName#> <# if (GenerateOperations) { #>: <#=RepoName#>.Record<<#=tbl.ClassName#>> <# } #>, IPoco
    {
<#
foreach(Column col in from c in tbl.Columns where !c.Ignore select c)
{
        // Column bindings
#>
<# if (TrackModifiedColumns) { #>
<# if (col.Name!=col.PropertyName) { #>
        [Column("<#=col.Name#>")]
<# } else { #>
        [Column] 
<# } #>

        public <#=col.PropertyType #><#=CheckNullable(col)#> <#=col.PropertyName #> 
        { 
            get
            {
                return _<#=col.PropertyName #>;
            }
            set
            {
                _<#=col.PropertyName #> = value;
                MarkColumnModified("<#=col.Name#>");
            }
        }
        <#=col.PropertyType #><#=CheckNullable(col)#> _<#=col.PropertyName #>;

<# } else { #>
<# if (col.Name!=col.PropertyName) { #>
        [Column("<#=col.Name#>")] 
        public <#=col.PropertyType #><#=CheckNullable(col)#> <#=col.PropertyName #> { get; set; }

<# } else { #>
        [Column]
        public <#=col.PropertyType #><#=CheckNullable(col)#> <#=col.PropertyName #> { get; set; }
<# } #>
<# } #>
<# } #>
    }
<# } #>
<# } #>
}
